const { SlashCommandBuilder, EmbedBuilder, ActivityType } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName("stop")
        .setDescription("–ó–∞–∫–∞–Ω—á–∏–≤–∞—é —Å–≤–æ–π –∫–æ–Ω—Ü–µ—Ä—Ç"),
    async execute(interaction, client) {
        await interaction.deferReply();

        const kazagumo = client.kazagumo;
        const player = kazagumo.players.get(interaction.guildId);

        if (!interaction.member.voice.channel) {
            const errorEmbed = new EmbedBuilder()
                .setColor(0xFF0000)
                .setTitle("–û—à–∏–±–∫–∞")
                .setDescription("–ù–µ –≤–∏–∂—É —Ç–µ–±—è, –≥–¥–µ —Ç—ã?");
            return interaction.followUp({ embeds: [errorEmbed], ephemeral: true });
        }

        if (!player) {
            const errorEmbed = new EmbedBuilder()
                .setColor(0xFF0000)
                .setTitle("–û—à–∏–±–∫–∞")
                .setDescription("–ò–≥—Ä–∞—Ç—å –Ω–µ—á–µ–≥–æ!");
            return interaction.followUp({ embeds: [errorEmbed], ephemeral: true });
        }

        try {
            const lastMessage = player.data.get("message");
            if (lastMessage) {
                try {
                    await lastMessage.delete();
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è "Now Playing":', error);
                }
                player.data.delete("message");
            }

            await player.destroy();

            const successEmbed = new EmbedBuilder()
                .setColor(0xA020F0)
                .setTitle("–ö–æ–Ω—Ü–µ—Ä—Ç –æ–∫–æ–Ω—á–µ–Ω")
                .setDescription(`–õ–∞–¥–Ω–æ, —Å –≤–∞—Å —Ö–≤–∞—Ç–∏—Ç, <@${interaction.user.id}>, –µ—â—ë —É–≤–∏–¥–∏–º—Å—è üòâ`)
                .setFooter({ 
                    text: `–ó–∞–ø—É—Å—Ç–∏–ª: ${interaction.user.displayName}`,
                    iconURL: interaction.user.displayAvatarURL({ dynamic: true })
                });
            await interaction.followUp({ embeds: [successEmbed] });
        } catch (error) {
            const errorEmbed = new EmbedBuilder()
                .setColor(0xFF0000)
                .setTitle("–û—à–∏–±–∫–∞")
                .setDescription("–£ –º–µ–Ω—è —Å–ª–æ–º–∞–ª–∞—Å—å –±–∞–ª–∞–ª–∞–π–∫–∞, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
            await interaction.followUp({ embeds: [errorEmbed], ephemeral: true });
            console.error(error);
        } await pickPresence();
    

        async function pickPresence () {
            try {
                await client.user.setPresence({
                    activities: [
                        {
                            name: "–ï–º —Å—ã—Ä üßÄ",
                            type: ActivityType.Custom,
                        },
                    ],
                    status: 'idle',
                })
            } catch (error) {
                console.error(error);
            }
        }
    }
};


