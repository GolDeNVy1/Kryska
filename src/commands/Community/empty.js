const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('empty')
        .setDescription('–û—á–∏—â–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å'),

    async execute(interaction, client) {
        await interaction.deferReply();

        const kazagumo = client.kazagumo;
        const player = kazagumo.players.get(interaction.guildId);

        if (!interaction.member.voice.channel) {
            const errorEmbed = new EmbedBuilder()
                .setColor(0xFF0000)
                .setTitle("‚ùå –û—à–∏–±–∫–∞")
                .setDescription("–ù–µ –≤–∏–∂—É —Ç–µ–±—è, –≥–¥–µ —Ç—ã?");
            return interaction.followUp({ embeds: [errorEmbed], ephemeral: true });
        }

        if (!player) {
            const errorEmbed = new EmbedBuilder()
                .setColor(0xFF0000)
                .setTitle("‚ùå –û—à–∏–±–∫–∞")
                .setDescription("–ò–≥—Ä–∞—Ç—å –Ω–µ—á–µ–≥–æ!");
            return interaction.followUp({ embeds: [errorEmbed], ephemeral: true });
        }

        try {
            player.queue.clear();

            const successEmbed = new EmbedBuilder()
                .setColor(0xFF0000)
                .setTitle("üóëÔ∏è –†–µ–ø–µ—Ä—Ç—É–∞—Ä –æ—á–∏—â–µ–Ω")
                .setFooter({
                    text: `–ó–∞—Ö–æ—Ç–µ–ª: ${interaction.user.tag}`,
                    iconURL: interaction.user.displayAvatarURL({ dynamic: true }),
                });

            await interaction.followUp({ embeds: [successEmbed] });
        } catch (error) {
            const errorEmbed = new EmbedBuilder()
                .setColor(0xFF0000)
                .setTitle("‚ùå –û—à–∏–±–∫–∞")
                .setDescription("–£ –º–µ–Ω—è —Å–ª–æ–º–∞–ª–∞—Å—å –±–∞–ª–∞–ª–∞–π–∫–∞. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.");
            await interaction.followUp({ embeds: [errorEmbed], ephemeral: true });
            console.error(error);
        }
    },
};
